/* Flash OS Routines (Automagically Generated)
 * Copyright (c) 2009-2015 ARM Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "flash_blob.h"

static const uint32_t {{name}}_flash_prog_blob[] = {
    {{prog_header}}
    {{mem}}
};

static const program_target_t flash = {
    {{func['init']}}, // init
    {{func['uninit']}}, // uninit
    {{func['eraseAll']}}, // eraseAll
    {{func['erase_sector']}}, // erase_sector
    {{func['program_page']}}, // program_page

    // BKPT : start of blob + 1
    // RSB  : blob start + header + rw data offset
    // RSP  : stack pointer
    {
        {{entry}} + 0x00000001,
        {{entry}} + {{header_size}} + {{static_base}},
        {{stack_pointer}}
    },

    {{entry}} + 0x00000A00,   // mem buffer location
    {{entry}},                // location to write prog_blob in target RAM
    sizeof({{name}}_flash_prog_blob), // prog_blob size
    {{name}}_flash_prog_blob,         // address of prog_blob
    512                 // ram_to_flash_bytes_to_be_written - should be less than 512 bytes or divisible into 512 (MSD only sends 512 bytes at a time)
};
